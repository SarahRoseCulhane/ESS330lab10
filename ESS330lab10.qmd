---
title: "Lab 10: Distances and the Border Zone"
subtitle: 'ESS 330'
author:
  - name: Sarah Culhane
    email: sculhane@colostate.edu
format: html
execute: 
  echo: true
---

```{r}
# spatial data science
library(tidyverse)
library(sf)
library(units)

# Data
library(AOI)

# Visualization
library(gghighlight)
library(ggrepel)
library(knitr)
```

First, I loaded the necessary libraries.

# Question 1

1.1

```{r}
# Set up the Equidistant Conic projection
eqdc <- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'

# Download CONUS states
conus_states <- aoi_get(state = "conus")

# Project to eqdc
conus_states_proj <- st_transform(conus_states, crs = eqdc)

# Plot
ggplot() +
  geom_sf(data = conus_states_proj) +
  coord_sf(datum = st_crs(conus_states_proj)) +
  theme_linedraw()
```

First, I downloaded a projection that preserves distance at the scale of CONUS

1.2

```{r}
remotes::install_github("mikejohnson51/AOI")
# Download countries
countries <- aoi_get(country = c("USA", "CA", "MX"))

# Project to eqdc
countries_proj <- st_transform(countries, crs = eqdc)
```

Then, I installed the correct github AOI package to get USA state borders and used st_transform reproject the data to the correct coordinate system suitable for distance measurements at the national scale

1.3

```{r}
# Download the USA cities CSV manually and save in "data" folder.
# Example assumes you saved it as "data/uscities.csv"

# Make it spatial
cities_sf <- st_as_sf(cities, coords = c("lng", "lat"), crs = 4326)  # raw lat/lon

# Project to eqdc
cities_sf_proj <- st_transform(cities_sf, crs = eqdc)

# Filter to cities in CONUS states (if needed, depending on your dataset)
cities_sf_proj <- cities_sf_proj %>% 
  filter(state_id %in% unique(conus_states$state))

# Plot
ggplot() +
  geom_sf(data = cities_sf_proj, size = 0.5) +
  coord_sf(datum = st_crs(cities_sf_proj)) +
  theme_linedraw()
```

Then, I made sure the data was in the eqdc projection

1.4

```{r}


```

Then, I converted the "uscities" dataframe to a spatial object..

# Question 2

2.1 - distance to USA border (km)

```{}
```
