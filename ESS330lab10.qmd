---
title: "Lab 10: Distances and the Border Zone"
subtitle: 'ESS 330'
author:
  - name: Sarah Culhane
    email: sculhane@colostate.edu
format: html
execute: 
  echo: true
---

```{r}
# spatial data science
library(tidyverse)
library(sf)
library(units)

# Data
library(AOI)

# Visualization
library(gghighlight)
library(ggrepel)
library(knitr)
library(flextable)
```

First, I loaded the necessary libraries.

# Question 1

1.1

```{r}
# Define Projection
eqdc <- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'


```

First, I downloaded a projection that preserves distance at the scale of CONUS.

1.2 - Get USA state boundaries

```{r}

states <- aoi_get(state = 'conus') %>%
  st_transform(crs = eqdc)

```

Then, I installed the correct github AOI package to get USA state borders and used st_transform reproject the data to the correct coordinate system (eqdc)

1.3 - Get country boundaries for Mexico, the U.S., and Canada

```{r}

countries <- aoi_get(country = c("MX", "CA", "USA")) %>%
  st_transform(crs = eqdc)

```

Then, I used aoi_get() to access country boundaries, making sure the data is in the correct projected coordinate system (eqdc)

1.4 - Get city locations from the CSV file

```{r}

library(readr) 
library(dplyr)
# load libraries

cities_df <- read_csv("data/uscities.csv") #read data into working session
cities <- st_as_sf(cities_df,
                   coords = c("lng", "lat"),
                   crs = 4326) %>%   
  st_transform(crs = eqdc)
states_list <- unique(states$state_abbr)
cities <- cities %>% filter(state_id %in% states_list) #filter cities outside of the U.S., Canada, or Mexico


```

Then, I converted the "uscities" dataframe to a spatial object. and removed the cities in states that I do not want using the filter() function

# Question 2

2.1 - distance to USA border (coastline or national) (km)

```{r}
usa_border <- states %>%
  st_union() %>%
  st_cast("MULTILINESTRING") # convert the state boundaries to a MULTILINESTRING geometry using the state object

cities$dist_to_border_km <- as.numeric(st_distance(cities, usa_border)) / 1000

top5_border <- cities %>%
  arrange(desc(dist_to_border_km)) %>%
  select(city, state_id, dist_to_border_km) %>%
  slice_head(n = 5)

flextable(top5_border)

```

Using the code above, i produced a table documenting the five cities farthest from the USA border.

2.2

```{r}
state_borders <- states %>%
  st_combine() %>%
  st_cast("MULTILINESTRING") # convert the USA state boundaries to a MULTILINESTRING geometry

cities$dist_to_state_km <- as.numeric(st_distance(cities, state_borders)) / 1000

top5_state <- cities %>%
  arrange(desc(dist_to_state_km)) %>%
  select(city, state_id, dist_to_state_km) %>%
  slice_head(n = 5)

flextable(top5_state) 


```

I used the code above to document the five cities farthest from a state border.

2.3

```{r}
mexico <- countries %>%
  filter(postal == "MX") %>%
  st_cast("MULTILINESTRING")

cities$dist_to_mexico_km <- as.numeric(st_distance(cities, mexico)) / 1000

top5_mexico <- cities %>%
  arrange(desc(dist_to_mexico_km)) %>%
  select(city, state_id, dist_to_mexico_km) %>%
  slice_head(n = 5)

flextable(top5_mexico)

```

I used the code above to produce a table documenting the five cities farthest from the Mexico border.

2.4

```{r}
canada <- countries %>%
  filter(postal == "CA") %>%
  st_cast("MULTILINESTRING")

cities$dist_to_canada_km <- as.numeric(st_distance(cities, canada)) / 1000

top5_canada <- cities %>%
  arrange(desc(dist_to_canada_km)) %>%
  select(city, state_id, dist_to_canada_km) %>%
  slice_head(n = 5)

flextable(top5_canada)
```

I used the code above to produce a table documenting the top five cities farthest away from the Canada border.

# Question 3

```{r}
library(ggrepel)
library(gghighlight)
library(viridis)
# load neccessary libraries 
```

3.1 Data

```{r}
# Top 10 cities by population
top10_cities <- cities %>%
  arrange(desc(population)) %>%
  slice_head(n = 10)

# create a map
ggplot() +
  geom_sf(data = countries, fill = "gray95", color = "black", size = 0.5, lty = 2) + 
  geom_sf(data = states, fill = NA, color = "black", size = 0.3) +  
  geom_sf(data = top10_cities, color = "red", size = 2) +  
  ggrepel::geom_label_repel(data = top10_cities, 
                            aes(label = city, geometry = geometry), 
                            stat = "sf_coordinates",
                            min.segment.length = 0,
                             max.overlaps = 20) +  
  theme_minimal() +
  labs(title = "Top 10 USA Cities by population")

```

I used the code above to create a map of the 10 largest USA cities (by population) on a single map.

3.2

```{r}
# 5 farthest from national border
top5_border_cities <- cities %>%
  arrange(desc(dist_to_border_km)) %>%
  slice_head(n = 5)

ggplot() +
  geom_sf(data = states, fill = NA, color = "black", size = 0.3) +
  geom_sf(data = cities, aes(color = dist_to_border_km), size = 0.5) +
  scale_color_viridis(name = "Distance to Border (km)", option = "viridis") +
  geom_sf(data = top5_border_cities, color = "red", size = 2) +
  ggrepel::geom_label_repel(data = top5_border_cities, 
                            aes(label = city, geometry = geometry), 
                            stat = "sf_coordinates",
                            min.segment.length = 0) +
  theme_minimal() +
  labs(title = "Distance of USA Cities from National Border")

```

I used the code above to create map that colors USA cities by their distance from the national border and labels the 5 cities that are farthest from the border.

3.3 - City Distance from Nearest State

```{r}
# 5 farthest from state border
top5_state_cities <- cities %>%
  arrange(desc(dist_to_state_km)) %>%
  slice_head(n = 5)

ggplot() +
  geom_sf(data = states, fill = NA, color = "black", size = 0.3) +
  geom_sf(data = cities, aes(color = dist_to_state_km), size = 0.5) +
  scale_color_viridis(name = "Distance to State Border (km)", option = "viridis") +
  geom_sf(data = top5_state_cities, color = "blue", size = 2) +
  ggrepel::geom_label_repel(data = top5_state_cities, 
                            aes(label = city, geometry = geometry), 
                            stat = "sf_coordinates",
                            min.segment.length = 0) +
  theme_minimal() +
  labs(title = "Distance of USA Cities from Nearest State Border")

```

I used the code above to create a map that colors USA cities by their distance from the nearest state border and labeled the 5 cities that re farthest away from any border.

3.4 Equidistance boundary from Mexico and Canada

```{r}
cities <- cities %>%
  mutate(abs_diff_mex_can = abs(dist_to_mexico_km - dist_to_canada_km))

equidistant_cities <- cities %>%
  filter(abs_diff_mex_can <= 100)

top5_equidistant <- equidistant_cities %>%
  arrange(desc(population)) %>%
  slice_head(n = 5)

ggplot() +
  geom_sf(data = states, fill = NA, color = "black", size = 0.3) +
  geom_sf(data = cities, color = "lightgray", size = 0.3) +
  geom_sf(data = equidistant_cities, aes(geometry = geometry), color = "purple", size = 0.8) +
  gghighlight(abs_diff_mex_can <= 100, label_key = city) +
  ggrepel::geom_label_repel(data = top5_equidistant, 
                            aes(label = city, geometry = geometry), 
                            stat = "sf_coordinates",
                            min.segment.length = 0,
                            max.overlaps = Inf) +
  theme_minimal() +
  labs(title = "Cities Equidistant (Â±100 km) from Mexico and Canada Borders")



```

I used the code above to identify the cities that are equal distrance from the Canadian AND Mexican border (+/- 100 km).

# Question 4

4.1 Quantifying Border Zone

```{r}
total_population <- sum(cities$population, na.rm = TRUE)
```

```{r}
border_zone_cities <- cities %>% 
  filter(dist_to_border_km <= 160)
border_zone_population <- sum(border_zone_cities$population, na.rm = TRUE)
percent_in_zone <- (border_zone_population / total_population) * 100
library(tibble)

border_zone_summary <- tibble(
  Metric = c(
    "Number of Cities within 100 miles",
    "Population within 100 miles",
    "Percent of Total Population in Zone"
  ),
  Value = c(
    nrow(border_zone_cities),
    border_zone_population,
    round(percent_in_zone, 2)
  )
)

border_zone_summary

```

I used the code above to create a table reporting how many cities are in the 100 mile zone, how many people live in a city within 100 miles of the border, and what percentage of the total population is in this zone. However, I could not find the ACLU estimates using the article provided.

4.2 - Mapping Border Zonee

```{r}
ggplot() +
  geom_sf(data = cities, aes(color = dist_to_border_km), size = 0.5) +
  scale_color_gradient(low = "orange", high = "darkred") +
  gghighlight(dist_to_border_km <= 160, label_key = city) +
  ggrepel::geom_label_repel(
    data = border_zone_cities %>% 
      top_n(10, population),
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    min.segment.length = 0,
    max.overlaps = Inf
  ) +
  theme_minimal() +
  labs(title = "Cities within 100 Miles of USA Border",
       color = "Distance to Border (km)")

```

I used the code above to make a map highlighting the cities within the 100 mile zone and label the top 10 most populous cities

4.3

```{r}
library(dplyr)

top_city_per_state <- border_zone_cities %>%
  group_by(state_name) %>%
  slice_max(order_by = population, n = 1) %>%
  ungroup()
ggplot() +
  geom_sf(data = cities, aes(color = dist_to_border_km), size = 0.5) +
  scale_color_gradient(low = "orange", high = "darkred") +
  gghighlight(dist_to_border_km <= 160, label_key = city) +
  ggrepel::geom_label_repel(
    data = top_city_per_state,
    aes(label = city, geometry = geometry),
    stat = "sf_coordinates",
    min.segment.length = 0,
    max.overlaps = Inf
  ) +
  theme_minimal() +
  labs(title = "Most Populous City in Each State within 100-Mile Border Zone",
       color = "Distance to Border (km)")

```

I used the code above to label the most populous city in each state within the danger zone.
