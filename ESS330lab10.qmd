---
title: "Lab 10: Distances and the Border Zone"
subtitle: 'ESS 330'
author:
  - name: Sarah Culhane
    email: sculhane@colostate.edu
format: html
execute: 
  echo: true
---

```{r}
# spatial data science
library(tidyverse)
library(sf)
library(units)

# Data
library(AOI)

# Visualization
library(gghighlight)
library(ggrepel)
library(knitr)
```

First, I loaded the necessary libraries.

# Question 1

1.1

```{r}
# Define Projection
eqdc <- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'


```

First, I downloaded a projection that preserves distance at the scale of CONUS

1.2

```{r}
# Install AOI package if needed
# remotes::install_github("mikejohnson51/AOI")

library(AOI)
library(sf)
library(ggplot2)

# Get USA states
states <- aoi_get(state = 'conus')

# Project to Equidistant Conic
states <- st_transform(states, crs = eqdc)

# Check
print(states)

```

Then, I installed the correct github AOI package to get USA state borders and used st_transform reproject the data to the correct coordinate system suitable for distance measurements at the national scale

1.3

```{r}
# Get USA states
states <- aoi_get(state = 'conus')

# Project to Equidistant Conic
states <- st_transform(states, crs = eqdc)

# Check
print(states)

```

Then, I made sure the data was in the eqdc projection

1.4

```{r}

library(readr)
library(dplyr)

# Read cities data
cities <- read_csv("data/uscities.csv")

# View structure
glimpse(cities)

# Create spatial object
cities_sf <- st_as_sf(cities, coords = c("lng", "lat"), crs = 4326)  # Lat/Lon CRS

# Project to eqdc
cities_sf_proj <- st_transform(cities_sf, crs = eqdc)

# OPTIONAL: filter cities to only CONUS states
conus_states <- unique(states$state)

cities_sf_proj <- cities_sf_proj %>%
  filter(state_id %in% conus_states)

# Quick plot
ggplot() +
  geom_sf(data = states_proj, fill = NA) +
  geom_sf(data = cities_sf_proj, color = "red", size = 0.5) +
  coord_sf(datum = st_crs(cities_sf_proj)) +
  theme_linedraw()

```

Then, I converted the "uscities" dataframe to a spatial object..

# Question 2

2.1 - distance to USA border (km)

```{r}
usa_border = states |> 
  st_union() |>        # Union to make one shape (resolve internal boundaries)
  st_cast("MULTILINESTRING")   # Cast to lines (border only)
cities = mutate(cities, 
                dist_to_usa_border = drop_units(set_units(st_distance(cities, usa_border), "km")))
cities |> 
  select(city, state, dist_to_usa_border) |> 
  arrange(desc(dist_to_usa_border)) |> 
  slice(1:5) |> 
  flextable::flextable()
```
