[
  {
    "objectID": "ESS330lab10.html",
    "href": "ESS330lab10.html",
    "title": "Lab 10: Distances and the Border Zone",
    "section": "",
    "text": "# spatial data science\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(sf)\n\nLinking to GEOS 3.13.1, GDAL 3.10.2, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(units)\n\nudunits database from C:/Users/sarah/AppData/Local/R/win-library/4.5/units/share/udunits/udunits2.xml\n\n# Data\nlibrary(AOI)\n\n# Visualization\nlibrary(gghighlight)\nlibrary(ggrepel)\nlibrary(knitr)\nlibrary(flextable)\n\n\nAttaching package: 'flextable'\n\nThe following object is masked from 'package:purrr':\n\n    compose\n\n\nFirst, I loaded the necessary libraries.\n\nQuestion 1\n1.1\n\n# Define Projection\neqdc &lt;- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'\n\nFirst, I downloaded a projection that preserves distance at the scale of CONUS\n1.2\n\nstates &lt;- aoi_get(state = 'conus') %&gt;%\n  st_transform(crs = eqdc)\n\nThen, I installed the correct github AOI package to get USA state borders and used st_transform reproject the data to the correct coordinate system suitable for distance measurements at the national scale\n1.3\n\ncountries &lt;- aoi_get(country = c(\"MX\", \"CA\", \"USA\")) %&gt;%\n  st_transform(crs = eqdc)\n\nThen, I made sure the data was in the eqdc projection\n1.4\n\nlibrary(readr)\nlibrary(dplyr)\n\n\ncities_df &lt;- read_csv(\"data/uscities.csv\")\n\nRows: 31254 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (9): city, city_ascii, state_id, state_name, county_fips, county_name, s...\ndbl (6): lat, lng, population, density, ranking, id\nlgl (2): military, incorporated\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncities &lt;- st_as_sf(cities_df,\n                   coords = c(\"lng\", \"lat\"),\n                   crs = 4326) %&gt;%    # original is WGS84 (EPSG:4326)\n  st_transform(crs = eqdc)\n# If needed: check the 'state_id' or 'state_name' columns to filter\nstates_list &lt;- unique(states$state_abbr)\ncities &lt;- cities %&gt;% filter(state_id %in% states_list)\n\nThen, I converted the “uscities” dataframe to a spatial object..\n\n\nQuestion 2\n2.1 - distance to USA border (km)\n\nusa_border &lt;- states %&gt;%\n  st_union() %&gt;%\n  st_cast(\"MULTILINESTRING\")\n\ncities$dist_to_border_km &lt;- as.numeric(st_distance(cities, usa_border)) / 1000\n\ntop5_border &lt;- cities %&gt;%\n  arrange(desc(dist_to_border_km)) %&gt;%\n  select(city, state_id, dist_to_border_km) %&gt;%\n  slice_head(n = 5)\n\nflextable(top5_border)\n\ncitystate_iddist_to_border_kmgeometryMinneapolisKS1,084.275[[XY]]AdaKS1,084.112[[XY]]BarnardKS1,083.737[[XY]]ManchesterKS1,080.210[[XY]]TalmageKS1,080.049[[XY]]\n\n\n2.2\n\nstate_borders &lt;- states %&gt;%\n  st_combine() %&gt;%\n  st_cast(\"MULTILINESTRING\")\n\ncities$dist_to_state_km &lt;- as.numeric(st_distance(cities, state_borders)) / 1000\n\ntop5_state &lt;- cities %&gt;%\n  arrange(desc(dist_to_state_km)) %&gt;%\n  select(city, state_id, dist_to_state_km) %&gt;%\n  slice_head(n = 5)\n\nflextable(top5_state)\n\ncitystate_iddist_to_state_kmgeometryBriggsTX314.7901[[XY]]LampasasTX308.9002[[XY]]FlorenceTX304.0898[[XY]]SaladoTX302.8041[[XY]]KempnerTX302.5260[[XY]]\n\n\n2.3\n\nmexico &lt;- countries %&gt;%\n  filter(postal == \"MX\") %&gt;%\n  st_cast(\"MULTILINESTRING\")\n\ncities$dist_to_mexico_km &lt;- as.numeric(st_distance(cities, mexico)) / 1000\n\ntop5_mexico &lt;- cities %&gt;%\n  arrange(desc(dist_to_mexico_km)) %&gt;%\n  select(city, state_id, dist_to_mexico_km) %&gt;%\n  slice_head(n = 5)\n\nflextable(top5_mexico)\n\ncitystate_iddist_to_mexico_kmgeometryGrand IsleME3,282.825[[XY]]CaribouME3,250.330[[XY]]Presque IsleME3,234.570[[XY]]OakfieldME3,175.577[[XY]]Island FallsME3,162.285[[XY]]\n\n\n2.4\n\ncanada &lt;- countries %&gt;%\n  filter(postal == \"CA\") %&gt;%\n  st_cast(\"MULTILINESTRING\")\n\ncities$dist_to_canada_km &lt;- as.numeric(st_distance(cities, canada)) / 1000\n\ntop5_canada &lt;- cities %&gt;%\n  arrange(desc(dist_to_canada_km)) %&gt;%\n  select(city, state_id, dist_to_canada_km) %&gt;%\n  slice_head(n = 5)\n\nflextable(top5_canada)\n\ncitystate_iddist_to_canada_kmgeometryGuadalupe GuerraTX2,206.455[[XY]]SandovalTX2,205.641[[XY]]FrontonTX2,204.794[[XY]]Fronton RanchettesTX2,202.118[[XY]]EvergreenTX2,202.020[[XY]]\n\n\n\n\nQuestion 3\n\nlibrary(ggrepel)\nlibrary(gghighlight)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\n\n3.1\n\n# Top 10 cities by population\ntop10_cities &lt;- cities %&gt;%\n  arrange(desc(population)) %&gt;%\n  slice_head(n = 10)\n\n# Plot\nggplot() +\n  geom_sf(data = countries, fill = \"gray95\", color = \"black\", size = 0.5, lty = 2) +  # 3 countries\n  geom_sf(data = states, fill = NA, color = \"black\", size = 0.3) +  # states\n  geom_sf(data = top10_cities, color = \"red\", size = 2) +  # top 10 cities\n  ggrepel::geom_label_repel(data = top10_cities, \n                            aes(label = city, geometry = geometry), \n                            stat = \"sf_coordinates\",\n                            min.segment.length = 0,\n                             max.overlaps = 20) +  # smart labels\n  theme_minimal() +\n  labs(title = \"North America with Top 10 USA Cities\")\n\n\n\n\n\n\n\n\n3.2\n\n# 5 farthest from national border\ntop5_border_cities &lt;- cities %&gt;%\n  arrange(desc(dist_to_border_km)) %&gt;%\n  slice_head(n = 5)\n\nggplot() +\n  geom_sf(data = states, fill = NA, color = \"black\", size = 0.3) +\n  geom_sf(data = cities, aes(color = dist_to_border_km), size = 0.5) +\n  scale_color_viridis_c(name = \"Distance to Border (km)\", option = \"plasma\") +\n  geom_sf(data = top5_border_cities, color = \"red\", size = 2) +\n  ggrepel::geom_label_repel(data = top5_border_cities, \n                            aes(label = city, geometry = geometry), \n                            stat = \"sf_coordinates\",\n                            min.segment.length = 0) +\n  theme_minimal() +\n  labs(title = \"Distance of USA Cities from National Border\")\n\n\n\n\n\n\n\n\n3.3\n\n# 5 farthest from state border\ntop5_state_cities &lt;- cities %&gt;%\n  arrange(desc(dist_to_state_km)) %&gt;%\n  slice_head(n = 5)\n\nggplot() +\n  geom_sf(data = states, fill = NA, color = \"black\", size = 0.3) +\n  geom_sf(data = cities, aes(color = dist_to_state_km), size = 0.5) +\n  scale_color_viridis_c(name = \"Distance to State Border (km)\", option = \"turbo\") +\n  geom_sf(data = top5_state_cities, color = \"blue\", size = 2) +\n  ggrepel::geom_label_repel(data = top5_state_cities, \n                            aes(label = city, geometry = geometry), \n                            stat = \"sf_coordinates\",\n                            min.segment.length = 0) +\n  theme_minimal() +\n  labs(title = \"Distance of USA Cities from Nearest State Border\")\n\n\n\n\n\n\n\n\n3.4\n\ncities &lt;- cities %&gt;%\n  mutate(abs_diff_mex_can = abs(dist_to_mexico_km - dist_to_canada_km))\n\nequidistant_cities &lt;- cities %&gt;%\n  filter(abs_diff_mex_can &lt;= 100)\n\ntop5_equidistant &lt;- equidistant_cities %&gt;%\n  arrange(desc(population)) %&gt;%\n  slice_head(n = 5)\n\nggplot() +\n  geom_sf(data = states, fill = NA, color = \"black\", size = 0.3) +\n  geom_sf(data = cities, color = \"lightgray\", size = 0.3) +\n  geom_sf(data = equidistant_cities, aes(geometry = geometry), color = \"purple\", size = 0.8) +\n  gghighlight(abs_diff_mex_can &lt;= 100, label_key = city) +\n  ggrepel::geom_label_repel(data = top5_equidistant, \n                            aes(label = city, geometry = geometry), \n                            stat = \"sf_coordinates\",\n                            min.segment.length = 0,\n                            max.overlaps = Inf) +\n  theme_minimal() +\n  labs(title = \"Cities Equidistant (±100 km) from Mexico and Canada Borders\")\n\nWarning: Could not calculate the predicate for layer 1; ignored\n\n\n\n\n\n\n\n\n\n\n\nQuestion 4\n4.1\n\nborder_zone_cities &lt;- cities %&gt;% \n  filter(dist_to_border_km &lt;= 160)\nborder_zone_population &lt;- sum(border_zone_cities$population, na.rm = TRUE)\ntotal_population &lt;- sum(cities$population, na.rm = TRUE)\npercent_in_zone &lt;- (border_zone_population / total_population) * 100\nlibrary(tibble)\n\nborder_zone_summary &lt;- tibble(\n  Metric = c(\n    \"Number of Cities within 100 miles\",\n    \"Population within 100 miles\",\n    \"Total Population\",\n    \"Percent of Total Population in Zone\"\n  ),\n  Value = c(\n    nrow(border_zone_cities),\n    border_zone_population,\n    total_population,\n    round(percent_in_zone, 2)\n  )\n)\n\nborder_zone_summary\n\n# A tibble: 4 × 2\n  Metric                                    Value\n  &lt;chr&gt;                                     &lt;dbl&gt;\n1 Number of Cities within 100 miles        9813  \n2 Population within 100 miles         216043045  \n3 Total Population                    396228558  \n4 Percent of Total Population in Zone        54.5\n\n\n4.2\n\nggplot() +\n  geom_sf(data = cities, aes(color = dist_to_border_km), size = 0.5) +\n  scale_color_gradient(low = \"orange\", high = \"darkred\") +\n  gghighlight(dist_to_border_km &lt;= 160, label_key = city) +\n  ggrepel::geom_label_repel(\n    data = border_zone_cities %&gt;% \n      top_n(10, population),\n    aes(label = city, geometry = geometry),\n    stat = \"sf_coordinates\",\n    min.segment.length = 0,\n    max.overlaps = Inf\n  ) +\n  theme_minimal() +\n  labs(title = \"Cities within 100 Miles of USA Border\",\n       color = \"Distance to Border (km)\")\n\n\n\n\n\n\n\n\n4.3\n\nlibrary(dplyr)\n\ntop_city_per_state &lt;- border_zone_cities %&gt;%\n  group_by(state_name) %&gt;%\n  slice_max(order_by = population, n = 1) %&gt;%\n  ungroup()\nggplot() +\n  geom_sf(data = cities, aes(color = dist_to_border_km), size = 0.5) +\n  scale_color_gradient(low = \"orange\", high = \"darkred\") +\n  gghighlight(dist_to_border_km &lt;= 160, label_key = city) +\n  ggrepel::geom_label_repel(\n    data = top_city_per_state,\n    aes(label = city, geometry = geometry),\n    stat = \"sf_coordinates\",\n    min.segment.length = 0,\n    max.overlaps = Inf\n  ) +\n  theme_minimal() +\n  labs(title = \"Most Populous City in Each State within 100-Mile Border Zone\",\n       color = \"Distance to Border (km)\")"
  }
]